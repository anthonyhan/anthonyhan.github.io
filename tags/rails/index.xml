<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>rails on LimboNova</title><link>/tags/rails/</link><description>Recent content in rails on LimboNova</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><copyright>© Anthony</copyright><lastBuildDate>Fri, 12 Apr 2013 12:16:03 +0800</lastBuildDate><atom:link href="/tags/rails/index.xml" rel="self" type="application/rss+xml"/><item><title>Ruby on Rails 入门体验</title><link>/posts/ror-tutorial-review/</link><pubDate>Fri, 12 Apr 2013 12:16:03 +0800</pubDate><guid>/posts/ror-tutorial-review/</guid><description>&lt;p>今年年初时决定学习一下 Web 开发方面的知识，因为对 Ruby 早有耳闻，所以很自然地就选择了 Ruby on Rails 作为目标。在网上看到 Ruby on Rails Tutorial的教程，于是就跟着教程，边学边做地把这本书看完了。对 RoR 有了一个大概的了解，包括框架结构和开发流程，还有一些常用的Gems，确实是一本不错的实践入门书。&lt;/p>
&lt;h2 id="关于教程">关于教程&lt;/h2>
&lt;p>一开始时看的是英文原版，阅读速度缓慢，而我对实践充满热情，迫切希望早点学完自己动手做。恰好发现 Andor Chen 已经翻译了大部分章节，遇到有疑问的地方，就对照英文检查语句和代码。顺便修正一些译文里的错误，然后发送 pull request 让作者合并。&lt;/p>
&lt;p>这本书和以前看的 Flex 入门书——《Flex 3 权威指南》类似，都是以构建一个应用为主线，由浅入深地介绍 RoR 开发的基本知识，从最开始的静态页面到模型生成，控制器，路由，数据库，Ajax，还有贯彻整个开发过程的测试。教程里开发的是一个微博站点，而 Twitter 以前就是使用 RoR 开发的，做起来也饶有趣味。&lt;/p>
&lt;p>花了差不多两个月的业余时间看完了这个教程，并最终完成了那个微博网站，包括大部分练习题的功能。总的来说，还是有点挑战的。由于书中大部分都是编写步骤，注重手把手的教学实践。在原理的介绍上篇幅很少，而 RoR 这样“约定优于配置”的理念让我有点不适应，书中并无约定方面的解释，很多方法像变戏法一般地已经实现好了，而我却想一探究竟，搞清楚其幕后的动作。但毕竟这是一本入门书，或许是我要求太高了。&lt;/p></description></item><item><title>在Fedora上安装Ruby on Rails</title><link>/posts/install-ruby-on-rails-on-fedora/</link><pubDate>Sun, 20 Jan 2013 20:20:12 +0800</pubDate><guid>/posts/install-ruby-on-rails-on-fedora/</guid><description>&lt;blockquote>
&lt;p>Practically all the software in the world is either broken or very difficult to use. So users dread software. They’ve been trained that whenever they try to install something, or even fill out a form online, it’s not going to work. I dread installing stuff, and I have a Ph.D. in computer science.
Paul Graham, Founders at Work&lt;/p>
&lt;/blockquote>
&lt;p>这几年一直在用AS3.0做开发，已经很久没有接触Linux了。博客上挂着Fedora的倒计时牌子，每次看到新版本倒计时一个接一个地陆续发布，这个周末重新装上了Fedora，学习一些其他的Web开发知识。虽说Ruby on Rails这几年不是很流行了，而且近期Twitter改用java引起了不小的震动，有些人认为RoR过时了,Ruby日薄西山了。我倒是觉得技术人员与其关注这些，不如去专注学习技术。&lt;/p>
&lt;p>&lt;img src="https://upload.wikimedia.org/wikipedia/commons/9/9c/Ruby_on_Rails_logo.jpg" alt="ror_logo">&lt;/p>
&lt;h2 id="安装步骤">安装步骤&lt;/h2>
&lt;p>Fedora更新非常快，我用的是目前最新的Fedora 18。虽然按照文档和教程一步一步安装的，但还是遇到了很多问题。安装的方法有很多种，这个和Ruby语言的特性也很相似 😉 。考虑到环境配置和开发工作，使用RVM安装比较好，RVM可以管理多个Ruby版本和RubyGem，在开发时可以根据需要切换版本，配置环境也很方便。使用yum安装ruby，管理比较麻烦，不适合开发工作。&lt;/p>
&lt;h3 id="安装git和curl">安装git和cURL&lt;/h3>
&lt;p>可以考虑先更新所有包&lt;/p>
&lt;blockquote>
&lt;p>yum update&lt;/p>
&lt;/blockquote>
&lt;p>安装git&lt;/p>
&lt;blockquote>
&lt;p>yum install git-core&lt;/p>
&lt;/blockquote>
&lt;p>安装curl&lt;/p>
&lt;blockquote>
&lt;p>yum install curl&lt;/p>
&lt;/blockquote>
&lt;h3 id="安装rvm">安装RVM&lt;/h3>
&lt;p>RVM，即Ruby Version Manager，可以管理多个版本Ruby，RubyGem，Rails，对开发来说非常有用。&lt;/p>
&lt;blockquote>
&lt;p>curl -L get.rvm.io | bash -s stable
source ~/.rvm/scripts/rvm&lt;/p>
&lt;/blockquote></description></item></channel></rss>